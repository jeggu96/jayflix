{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5bb456e3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"poster-grid\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.items, (item, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"poster-card\",\n      style: _normalizeStyle(`background-image: url(https://image.tmdb.org/t/p/original${item.poster_path})`),\n      key: index\n    }, null, 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","items","item","index","style","_normalizeStyle","poster_path","key"],"sources":["/Users/cinnamonarts/Documents/jayflix/src/components/PosterGrid.vue"],"sourcesContent":["<template>\n  <div class=\"poster-grid\">\n    <div \n      class=\"poster-card\"\n      :style=\"`background-image: url(https://image.tmdb.org/t/p/original${item.poster_path})`\"\n      v-for=\"(item, index) in items\"\n      :key=\"index\">\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'PosterGrid',\n  props: {\n    items: {\n      type: Array,\n      required: true\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  @import \"./../assets/styles/poster_grid.scss\";\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAa;;uBAAxBC,mBAAA,CAOM,OAPNC,UAOM,I,kBANJD,mBAAA,CAKQE,SAAA,QAAAC,WAAA,CAFkBC,MAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAHrBP,mBAAA,CAKQ;MAJND,KAAK,EAAC,aAAa;MAClBS,KAAK,EAAAC,eAAA,6DAA8DH,IAAI,CAACI,WAAW;MAEnFC,GAAG,EAAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}