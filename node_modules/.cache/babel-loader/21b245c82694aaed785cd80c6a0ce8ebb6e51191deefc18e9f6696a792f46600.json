{"ast":null,"code":"import { createStore } from 'vuex';\nimport { getData } from './../api_layer';\nexport default createStore({\n  state: {\n    searchResults: null,\n    mediaType: 'movies',\n    latestMediaData: null,\n    tamilMoviesData: [{\n      release_date: \"2023-05-12\",\n      name: \"Good Night\",\n      overview: \"Mohan, an IT youngster with a snoring issue starts his life with Anu, the girl of his dreams, hiding his issue. However, trouble begins, when his snoring starts affecting his life and the health of his partner.\",\n      id: 1090969,\n      poster_path: \"/aFTO0tCTxXazstWfhOQHPb3kcMT.jpg\",\n      backdrop_path: \"/vuwEQmvlcJbMkBNxb84yq3Ov43C.jpg\",\n      video_url: 'https://ww1.akstream.xyz/v/tt26691319-tamil'\n    }]\n  },\n  getters: {},\n  mutations: {\n    SetMovieSearchResults(state, results) {\n      state.searchResults = results.data;\n    },\n    SetMediaType(state, type) {\n      state.mediaType = type;\n    },\n    SetLatestMediaData(state, data) {\n      state.latestMediaData = data;\n    }\n  },\n  actions: {\n    getLatestSeries() {\n      return getData('https://api.themoviedb.org/3/trending/tv/day');\n    },\n    getLatestMovies() {\n      return getData('https://api.themoviedb.org/3/trending/movie/day');\n    },\n    async getLatestMedia({\n      commit,\n      dispatch\n    }, type) {\n      let data = type === 'movies' ? await dispatch('getLatestMovies') : await dispatch('getLatestSeries');\n      if (type === 'movies') {\n        data = data.results.map(media => {\n          return {\n            release_date: media.release_date,\n            name: media.original_title,\n            overview: media.overview,\n            id: media.id,\n            poster_path: media.poster_path,\n            backdrop_path: media.backdrop_path\n          };\n        });\n      } else {\n        data = data.results.map(media => {\n          return {\n            release_date: media.release_date,\n            name: media.name,\n            overview: media.overview,\n            id: media.id,\n            poster_path: media.poster_path,\n            backdrop_path: media.backdrop_path\n          };\n        });\n      }\n      commit('SetLatestMediaData', data);\n    },\n    getMovieSearchResults(query) {\n      return getData(`https://api.themoviedb.org/3/search/movie?query=${query}`);\n    },\n    getTVSearchResults(query) {\n      return getData(`https://api.themoviedb.org/3/search/tv?query=${query}`);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","getData","state","searchResults","mediaType","latestMediaData","tamilMoviesData","release_date","name","overview","id","poster_path","backdrop_path","video_url","getters","mutations","SetMovieSearchResults","results","data","SetMediaType","type","SetLatestMediaData","actions","getLatestSeries","getLatestMovies","getLatestMedia","commit","dispatch","map","media","original_title","getMovieSearchResults","query","getTVSearchResults","modules"],"sources":["/Users/cinnamonarts/Documents/jayflix/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport { getData } from './../api_layer';\n\nexport default createStore({\n  state: {\n    searchResults: null,\n    mediaType: 'movies',\n    latestMediaData: null,\n    tamilMoviesData: [\n      {\n        release_date: \"2023-05-12\",\n        name: \"Good Night\",\n        overview: \"Mohan, an IT youngster with a snoring issue starts his life with Anu, the girl of his dreams, hiding his issue. However, trouble begins, when his snoring starts affecting his life and the health of his partner.\",\n        id: 1090969,\n        poster_path: \"/aFTO0tCTxXazstWfhOQHPb3kcMT.jpg\",\n        backdrop_path: \"/vuwEQmvlcJbMkBNxb84yq3Ov43C.jpg\",\n        video_url: 'https://ww1.akstream.xyz/v/tt26691319-tamil'\n      }\n    ]\n  },\n  getters: {\n  },\n  mutations: {\n    SetMovieSearchResults (state, results) {\n      state.searchResults = results.data;\n    },\n    SetMediaType (state, type) {\n      state.mediaType = type;\n    },\n    SetLatestMediaData (state, data) {\n      state.latestMediaData = data;\n    }\n  },\n  actions: {\n    getLatestSeries() {\n      return getData('https://api.themoviedb.org/3/trending/tv/day');\n    },\n    getLatestMovies() {\n      return getData('https://api.themoviedb.org/3/trending/movie/day');\n    },\n    async getLatestMedia ({commit, dispatch}, type) {\n      let data = type === 'movies' ? await dispatch('getLatestMovies') :  await dispatch('getLatestSeries');\n      if (type === 'movies') {\n        data = data.results.map(media => {\n          return {\n            release_date: media.release_date,\n            name: media.original_title,\n            overview: media.overview,\n            id: media.id,\n            poster_path: media.poster_path,\n            backdrop_path: media.backdrop_path\n          };\n        })\n      } else {\n        data = data.results.map(media => {\n          return {\n            release_date: media.release_date,\n            name: media.name,\n            overview: media.overview,\n            id: media.id,\n            poster_path: media.poster_path,\n            backdrop_path: media.backdrop_path\n          };\n        })\n      }\n      commit('SetLatestMediaData', data);\n    },\n    getMovieSearchResults(query) {\n      return getData(`https://api.themoviedb.org/3/search/movie?query=${query}`);\n    },\n    getTVSearchResults(query) {\n      return getData(`https://api.themoviedb.org/3/search/tv?query=${query}`);\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,SAASC,OAAO,QAAQ,gBAAgB;AAExC,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,aAAa,EAAE,IAAI;IACnBC,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE,IAAI;IACrBC,eAAe,EAAE,CACf;MACEC,YAAY,EAAE,YAAY;MAC1BC,IAAI,EAAE,YAAY;MAClBC,QAAQ,EAAE,oNAAoN;MAC9NC,EAAE,EAAE,OAAO;MACXC,WAAW,EAAE,kCAAkC;MAC/CC,aAAa,EAAE,kCAAkC;MACjDC,SAAS,EAAE;IACb,CAAC;EAEL,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IACTC,qBAAqBA,CAAEd,KAAK,EAAEe,OAAO,EAAE;MACrCf,KAAK,CAACC,aAAa,GAAGc,OAAO,CAACC,IAAI;IACpC,CAAC;IACDC,YAAYA,CAAEjB,KAAK,EAAEkB,IAAI,EAAE;MACzBlB,KAAK,CAACE,SAAS,GAAGgB,IAAI;IACxB,CAAC;IACDC,kBAAkBA,CAAEnB,KAAK,EAAEgB,IAAI,EAAE;MAC/BhB,KAAK,CAACG,eAAe,GAAGa,IAAI;IAC9B;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB,OAAOtB,OAAO,CAAC,8CAA8C,CAAC;IAChE,CAAC;IACDuB,eAAeA,CAAA,EAAG;MAChB,OAAOvB,OAAO,CAAC,iDAAiD,CAAC;IACnE,CAAC;IACD,MAAMwB,cAAcA,CAAE;MAACC,MAAM;MAAEC;IAAQ,CAAC,EAAEP,IAAI,EAAE;MAC9C,IAAIF,IAAI,GAAGE,IAAI,KAAK,QAAQ,GAAG,MAAMO,QAAQ,CAAC,iBAAiB,CAAC,GAAI,MAAMA,QAAQ,CAAC,iBAAiB,CAAC;MACrG,IAAIP,IAAI,KAAK,QAAQ,EAAE;QACrBF,IAAI,GAAGA,IAAI,CAACD,OAAO,CAACW,GAAG,CAACC,KAAK,IAAI;UAC/B,OAAO;YACLtB,YAAY,EAAEsB,KAAK,CAACtB,YAAY;YAChCC,IAAI,EAAEqB,KAAK,CAACC,cAAc;YAC1BrB,QAAQ,EAAEoB,KAAK,CAACpB,QAAQ;YACxBC,EAAE,EAAEmB,KAAK,CAACnB,EAAE;YACZC,WAAW,EAAEkB,KAAK,CAAClB,WAAW;YAC9BC,aAAa,EAAEiB,KAAK,CAACjB;UACvB,CAAC;QACH,CAAC,CAAC;MACJ,CAAC,MAAM;QACLM,IAAI,GAAGA,IAAI,CAACD,OAAO,CAACW,GAAG,CAACC,KAAK,IAAI;UAC/B,OAAO;YACLtB,YAAY,EAAEsB,KAAK,CAACtB,YAAY;YAChCC,IAAI,EAAEqB,KAAK,CAACrB,IAAI;YAChBC,QAAQ,EAAEoB,KAAK,CAACpB,QAAQ;YACxBC,EAAE,EAAEmB,KAAK,CAACnB,EAAE;YACZC,WAAW,EAAEkB,KAAK,CAAClB,WAAW;YAC9BC,aAAa,EAAEiB,KAAK,CAACjB;UACvB,CAAC;QACH,CAAC,CAAC;MACJ;MACAc,MAAM,CAAC,oBAAoB,EAAER,IAAI,CAAC;IACpC,CAAC;IACDa,qBAAqBA,CAACC,KAAK,EAAE;MAC3B,OAAO/B,OAAO,CAAE,mDAAkD+B,KAAM,EAAC,CAAC;IAC5E,CAAC;IACDC,kBAAkBA,CAACD,KAAK,EAAE;MACxB,OAAO/B,OAAO,CAAE,gDAA+C+B,KAAM,EAAC,CAAC;IACzE;EACF,CAAC;EACDE,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}