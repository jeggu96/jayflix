{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" <template v-if=\\\"latestMediaData\\\">\\n      <div \\n        v-for=\\\"(movie, i) in latestMediaData.results\\\" \\n        :key=\\\"i\\\"\\n        class=\\\"image_backdrop_container\\\"\\n        :style=\\\"`background: url(https://image.tmdb.org/t/p/original${movie.backdrop_path})`\\\">\\n        <div class=\\\"popular-movie-slider\\\">\\n          <img :src=\\\"`https://image.tmdb.org/t/p/original${movie.poster_path}`\\\" class=\\\"poster\\\">\\n          <div class=\\\"popular-movie-slider-content\\\">\\n            <p class=\\\"release\\\">{{movie.release_date}}</p>\\n            <h2 class=\\\"movie-name\\\">{{movie.name}}</h2>\\n            <p class=\\\"desc\\\">{{movie.overview}}</p>\\n            <div class=\\\"movie-btns\\\">\\n              <button @click=\\\"watchMovie(movie.id)\\\"><span class=\\\"fa fa-play\\\" aria-hidden=\\\"true\\\"></span>&nbsp;Watch</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </template> \"), _createCommentVNode(\" <ModalComponent v-if=\\\"videoPlayer.show\\\" @close=\\\"videoPlayer.show = false\\\">\\n      <template v-slot:body>\\n        <iframe \\n          style=\\\"width:100%; height: 500px;\\\"\\n          :src=\\\"`https://vidsrc.me/embed/movie?tmdb=${videoPlayer.videoId}`\\\"\\n          frameborder=\\\"0\\\"\\n          allowfullscreen />\\n      </template>\\n    </ModalComponent> \")]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode"],"sources":["/Users/cinnamonarts/Documents/jayflix/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <template v-if=\"latestMediaData\">\n      <div \n        v-for=\"(movie, i) in latestMediaData.results\" \n        :key=\"i\"\n        class=\"image_backdrop_container\"\n        :style=\"`background: url(https://image.tmdb.org/t/p/original${movie.backdrop_path})`\">\n        <div class=\"popular-movie-slider\">\n          <img :src=\"`https://image.tmdb.org/t/p/original${movie.poster_path}`\" class=\"poster\">\n          <div class=\"popular-movie-slider-content\">\n            <p class=\"release\">{{movie.release_date}}</p>\n            <h2 class=\"movie-name\">{{movie.name}}</h2>\n            <p class=\"desc\">{{movie.overview}}</p>\n            <div class=\"movie-btns\">\n              <button @click=\"watchMovie(movie.id)\"><span class=\"fa fa-play\" aria-hidden=\"true\"></span>&nbsp;Watch</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </template> -->\n    <!-- <ModalComponent v-if=\"videoPlayer.show\" @close=\"videoPlayer.show = false\">\n      <template v-slot:body>\n        <iframe \n          style=\"width:100%; height: 500px;\"\n          :src=\"`https://vidsrc.me/embed/movie?tmdb=${videoPlayer.videoId}`\"\n          frameborder=\"0\"\n          allowfullscreen />\n      </template>\n    </ModalComponent> -->\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport ModalComponent from '@/components/ModalComponent.vue';\nimport { mapActions, mapState } from 'vuex';\n\nexport default {\n  name: 'HomeView',\n  components: {\n    // ModalComponent\n  },\n  data () {\n    return {\n      posts: null,\n      videoPlayer: {\n        show: false,\n        videoId: null\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      mediaType: state => state.mediaType\n    }),\n    latestMediaData () {\n      return this.mediaType === 'movies' ? this.getLatestMovies() : this.getLatestSeries();\n    }\n  },\n  methods: {\n    ...mapActions(['getLatestMovies', 'getLatestSeries']),\n    watchMovie (id) {\n      this.videoPlayer.show = true;\n      this.videoPlayer.videoId = id;\n    }\n  }\n}\n</script>\n"],"mappings":";;uBACEA,mBAAA,CA6BM,cA5BJC,mBAAA,04BAkBe,EACfA,mBAAA,yWAQqB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}