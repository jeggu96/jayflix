{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <nav>\\n    <ul>\\n      <li><a class=\\\"active\\\" href=\\\"/\\\"><i class=\\\"fa fa-home\\\" /></a></li>\\n    </ul>\\n    <div class=\\\"media-switch\\\">\\n      <h3>MOVIES</h3>\\n      <label class=\\\"switch\\\">\\n        <input type=\\\"checkbox\\\" v-model=\\\"mediaTypeSwitch\\\">\\n        <span class=\\\"slider\\\">\\n            <span class=\\\"circle\\\"></span>\\n        </span>\\n      </label>\\n      <h3>SERIES</h3>\\n    </div>\\n    <div class=\\\"search\\\" :click-outisde=\\\"clickedOutside\\\">\\n        <div class=\\\"search-bar\\\">\\n          <input\\n            type=\\\"text\\\" \\n            placeholder=\\\"Search ...\\\"\\n            v-model=\\\"searchQuery\\\">\\n          <i class=\\\"fa fa-search\\\"></i>\\n        </div>\\n        <div v-if=\\\"searchResults\\\" class=\\\"list-group\\\">\\n          <li v-for=\\\"(result, index) in searchResults\\\" :key=\\\"index\\\">\\n            {{ result.title }}\\n          </li>\\n        </div>\\n      </div>\\n  </nav> \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_view)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["id","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_router_view"],"sources":["/Users/cinnamonarts/Documents/jayflix/src/App.vue"],"sourcesContent":["<style lang=\"scss\">\n @import './assets/styles/app.scss';\n @import './assets/styles/style_guide.scss';\n</style>\n\n<template>\n  <!-- <nav>\n    <ul>\n      <li><a class=\"active\" href=\"/\"><i class=\"fa fa-home\" /></a></li>\n    </ul>\n    <div class=\"media-switch\">\n      <h3>MOVIES</h3>\n      <label class=\"switch\">\n        <input type=\"checkbox\" v-model=\"mediaTypeSwitch\">\n        <span class=\"slider\">\n            <span class=\"circle\"></span>\n        </span>\n      </label>\n      <h3>SERIES</h3>\n    </div>\n    <div class=\"search\" :click-outisde=\"clickedOutside\">\n        <div class=\"search-bar\">\n          <input\n            type=\"text\" \n            placeholder=\"Search ...\"\n            v-model=\"searchQuery\">\n          <i class=\"fa fa-search\"></i>\n        </div>\n        <div v-if=\"searchResults\" class=\"list-group\">\n          <li v-for=\"(result, index) in searchResults\" :key=\"index\">\n            {{ result.title }}\n          </li>\n        </div>\n      </div>\n  </nav> -->\n  <div id=\"container\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nimport { getData } from './api_layer';\nimport { mapState, mapMutations, mapActions } from 'vuex';\n\nexport default {\n  name: 'App',\n  data () {\n    return {\n      searchQuery: '',\n      searchResults: null,\n      mediaTypeSwitch: false\n    }\n  },\n  computed: {\n    ...mapState({\n      mediaType: state => state.mediaType\n    })\n  },\n  watch: {\n    async searchQuery (query) {\n      if (query) {\n        const {results} = await getData(`https://api.themoviedb.org/3/search/movie?query=${query}`);\n        this.searchResults = results;\n      } else {\n        this.searchResults = null;\n      }\n    },\n    mediaTypeSwitch (type) {\n      this.SetMediaType(type ? 'series' : 'movies');\n      this.getLatestMedia(type);\n    }\n  },\n  mounted () {\n    this.getLatestMedia(this.mediaType);\n  },\n  methods: {\n    ...mapMutations(['SetMediaType']),\n    ...mapActions(['getLatestMedia']),\n    clickedOutside () {\n      console.log('Hello');\n      this.searchQuery = '';\n    }\n  }\n}\n</script>\n"],"mappings":";;EAmCOA,EAAE,EAAC;AAAW;;;6DA7BnBC,mBAAA,64BA4BU,EACVC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAcC,sBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}