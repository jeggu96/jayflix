{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, mergeProps as _mergeProps, createElementVNode as _createElementVNode, renderSlot as _renderSlot, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c549856\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"horizontal-slider__container\"\n};\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.items, (item, index) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: index\n    }, [_createElementVNode(\"input\", _mergeProps({\n      id: `dot${index + 1}`,\n      type: \"radio\",\n      name: \"dotGroup\"\n    }, index === 0 ? 'checked' : ''), null, 16 /* FULL_PROPS */, _hoisted_2), _createElementVNode(\"label\", {\n      for: `dot${index + 1}`\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"div\", {\n      class: _normalizeClass(`slide background${index}`),\n      style: _normalizeStyle(`background-image: url(https://image.tmdb.org/t/p/original${item.backdrop_path})`)\n    }, [_renderSlot(_ctx.$slots, \"sliderItem\", {\n      item: item\n    }, undefined, true)], 6 /* CLASS, STYLE */)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","items","item","index","_createElementVNode","_mergeProps","type","name","_hoisted_2","for","class","_normalizeClass","style","_normalizeStyle","backdrop_path","_renderSlot","_ctx","$slots","undefined"],"sources":["/Users/cinnamonarts/Documents/jayflix/src/components/HorizontalSlider.vue"],"sourcesContent":["<template>\n  <div id=\"horizontal-slider__container\">\n    <template v-for=\"(item, index) in items\" :key=\"index\">\n      <input :id=\"`dot${index+1}`\" type=\"radio\" name=\"dotGroup\" v-bind=\"index === 0 ? 'checked' : ''\">\n      <label :for=\"`dot${index+1}`\"></label>\n      <div :class=\"`slide background${index}`\" :style=\"`background-image: url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\">\n        <slot name=\"sliderItem\" :item=\"item\"></slot>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HorizontalSlider',\n  props: {\n    items: {\n      type: Array,\n      required: true\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n  @import \"./../assets/styles/horizontal_slider.scss\";\n</style>"],"mappings":";;;EACOA,EAAE,EAAC;AAA8B;;;;uBAAtCC,mBAAA,CAQM,OARNC,UAQM,I,kBAPJD,mBAAA,CAMWE,SAAA,QAAAC,WAAA,CANuBC,MAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;;WAAkBA;IAAK,IAClDC,mBAAA,CAAgG,SAAhGC,WAAA,CAAgG;MAAxFV,EAAE,QAAQQ,KAAK;MAAMG,IAAI,EAAC,OAAO;MAACC,IAAI,EAAC;OAAmBJ,KAAK,qDAAAK,UAAA,GACvEJ,mBAAA,CAAsC;MAA9BK,GAAG,QAAQN,KAAK;yCACxBC,mBAAA,CAEM;MAFAM,KAAK,EAAAC,eAAA,oBAAqBR,KAAK;MAAKS,KAAK,EAAAC,eAAA,6DAA8DX,IAAI,CAACY,aAAa;QAC7HC,WAAA,CAA4CC,IAAA,CAAAC,MAAA;MAAnBf,IAAI,EAAEA;IAAI,GAAAgB,SAAA,Q"},"metadata":{},"sourceType":"module","externalDependencies":[]}